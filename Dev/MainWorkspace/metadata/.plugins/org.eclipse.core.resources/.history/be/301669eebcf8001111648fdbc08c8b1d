package com.lwan.javafx.scene.control;

import javafx.beans.property.DoubleProperty;
import javafx.beans.property.ObjectProperty;
import javafx.beans.property.SimpleDoubleProperty;
import javafx.beans.property.SimpleObjectProperty;
import javafx.geometry.HPos;
import javafx.geometry.VPos;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.effect.DropShadow;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javafx.scene.paint.Paint;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;
import javafx.stage.StageStyle;

public class FloatingShadowPane extends Pane {
	private static final double DEFAULT_MARGIN = 5;
	private static final Paint DEFAULT_COLOR = Color.WHITE;
	
	private Node primaryChild;
	private Rectangle background;
	
	private DoubleProperty marginProperty;
	public DoubleProperty marginProperty() {
		if (marginProperty == null) {
			marginProperty = new SimpleDoubleProperty();
		}
		return marginProperty;
	}
	public void setMargin(double value) {
		marginProperty().set(value);
	}
	public double getMargin() {
		return marginProperty().get();
	}
	
	private ObjectProperty<Paint> backgroundFillProperty;
	public ObjectProperty<Paint> backgroundFillProperty() {
		if (backgroundFillProperty == null) {
			backgroundFillProperty = new SimpleObjectProperty<Paint>(background.getFill()) {
				public void setValue(Paint value) {
					super.setValue(value);
					background.setFill(value);
				}
				public void set(Paint value) {
					setValue(value);
				}
			};
		} 
		return backgroundFillProperty();
	}
	public void setBackgroundFill(Paint value) {
		backgroundFillProperty().set(value);
	}
	public Paint getBackgroundFill() {
		return backgroundFillProperty().get();
	}
	
	public FloatingShadowPane(Node primaryChild) {
		this.primaryChild = primaryChild;
		
		setMargin(DEFAULT_MARGIN);
		background = new Rectangle();
		setBackgroundFill(DEFAULT_COLOR);
		background.setEffect(new DropShadow());
		
		getChildren().addAll(background, primaryChild);
	}
	
	public void layoutChildren() {
		double width = primaryChild.prefWidth(-1);
		double height = primaryChild.prefHeight(-1);
		double margin = getMargin();
		
		setWidth(width + margin*2);
		setHeight(height + margin*2);
		
		background.setX(margin);
		background.setY(margin);
		background.setWidth(width);
		background.setHeight(height);
		
		layoutInArea(primaryChild, margin, margin, width, height, 0, HPos.LEFT, VPos.TOP);
		layoutInArea(background, margin, margin, width, height, 0, HPos.LEFT, VPos.TOP);
	}
	
	public static Stage createShadowedStage(Node primaryNode) {
		Stage s = new Stage();
		s.initStyle(StageStyle.TRANSPARENT);
		
		Scene sc = new Scene(new FloatingShadowPane(primaryNode), Color.TRANSPARENT);
		s.setScene(sc);
		
		return s;
	}
}