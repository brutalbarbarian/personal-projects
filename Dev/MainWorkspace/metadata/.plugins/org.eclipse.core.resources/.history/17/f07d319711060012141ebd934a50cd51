package com.lwan.musicsync.main;

import javafx.beans.property.Property;
import javafx.beans.property.SimpleIntegerProperty;
import javafx.scene.Group;
import javafx.scene.effect.BlurType;
import javafx.scene.effect.DropShadow;
import javafx.scene.layout.GridPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Polygon;
import javafx.scene.shape.Shape;

public class RatingsEdit extends GridPane {
	static final Color activeDefFill = Color.GOLD;
	static final Color inactiveDefFill = Color.AZURE;
	static final Color activeDefBorder = Color.BROWN;
	static final Color inactiveDefBorder = Color.MIDNIGHTBLUE;
	
	protected Star[] stars;
	protected Property<Number> ratingsProperty;
	protected boolean isMouseOver;
	protected int mouseOverRatings;
	
	public RatingsEdit(Property<Integer> valueProperty){
		
	}
	
	public Property<Integer> ratingsProperty() {
		if (ratingsProperty == null) {
			ratingsProperty = new SimpleIntegerProperty();
		}
		
	}
	
	protected Shape createStar() {
		Polygon p = new Polygon(2, 10, 5, 0, 8, 10, 0, 4, 10, 4);
		DropShadow border = new DropShadow();
		border.setBlurType(BlurType.GAUSSIAN);
		border.setRadius(2);
		p.setEffect(border);
		p.setStrokeWidth(1);
		p.setStroke(Color.TRANSPARENT);
		
		return p;
	}
	
	protected class Star extends Group {
		Shape star;
		DropShadow border;
		
		Star () {
			star = createStar();
			border = (DropShadow)star.getEffect();
			
			getChildren().add(star);
		}
		
		void setMouseOver(boolean active) {
			if (active) {
				star.setFill(activeDefFill);
				border.setColor(activeDefBorder);
			} else {
				star.setFill(inactiveDefFill);
				border.setColor(activeDefBorder);
			}
		}
		
		void setDefault(boolean active) {
			if (active) {
				star.setFill(activeDefFill);
				border.setColor(activeDefBorder);
			} else {
				star.setFill(inactiveDefFill);
				border.setColor(inactiveDefBorder);
			}
		}
	}
}
